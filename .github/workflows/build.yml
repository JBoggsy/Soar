name: Build/Test
on: [push, pull_request, workflow_dispatch]

jobs:
  # depends on pre-installed software: https://github.com/actions/runner-images/blob/main/images/linux/Ubuntu2004-Readme.md
  Linux:
    name: build-linux
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: install dependencies
        run: sudo apt-get install build-essential swig python-all-dev
      # separte install step so we can manage the version more easily
      - name: setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'
      - name: Setup dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0.X'

      # TODO: build `all` target
      - name: build
        run: python3 scons/scons.py --scu --opt --verbose all
      - name: compress artifacts
        uses: vimtor/action-zip@v1
        with:
          files: out/
          dest: build.zip
      - name: upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Soar-linux
          path: ./build.zip

  # depends on lots of pre-installed software: https://github.com/actions/runner-images/blob/main/images/macos/macos-12-Readme.md
  Mac-OSX:
    name: build-macosx
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1

    # already installed
    # - name: setup xcode
    #   uses: maxim-lobanov/setup-xcode@v1
    #   with:
    #     xcode-version: latest-stable
      - name: setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'
      - name: Setup dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0.X'

      # swig pre-installed, too
      # python pre-installed, too
      # homebrew should be pre-installed
      # TODO: install TCL from somewhere (maybe http://tclkits.rkeene.org/fossil/wiki/Downloads?)
      # TODO: build `all` target
      - name: build
        run: python3 scons/scons.py --scu --opt --verbose all
      - name: compress artifacts
        uses: vimtor/action-zip@v1
        with:
          files: out/
          dest: build.zip
      - name: upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Soar-macosx
          path: ./build.zip

  # depends on pre-installed software: https://github.com/actions/runner-images/blob/main/images/win/Windows2022-Readme.md
  Windows:
    name: build-windows
    runs-on: [windows-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      # This does not install MSVC or Visual Studio! We rely on the software installed already on the
      # GH action runner, and this step just prepares the environment. We pin the VS version here because
      # the error messages are much more helpful than the mess we get from SCons, which automatically
      # falls back on a combo of Mingw with MSVC libs and then fails to build.
      - name: switch to VS command prompt
        uses: ilammy/msvc-dev-cmd@v1
      # TODO: build `all` target
      - name: build
        run: ./build.bat --scu --opt --verbose all
      - name: compress artifacts
        uses: vimtor/action-zip@v1
        with:
          files: out/
          dest: build.zip
      - name: upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Soar-linux
          path: ./build.zip
